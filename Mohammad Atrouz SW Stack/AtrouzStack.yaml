---
- name: Mohammed Atrouz Requirements
  hosts: localhost
  become: yes
  tasks:
    - name: Update package lists
      apt:
        update_cache: yes

    - name: Install required packages
      apt:
        name:
          - git
          - python3
          - python3-pip
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
        state: present

    - name: Add Microsoft GPG key
      shell: "wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > /usr/share/keyrings/packages.microsoft.gpg"
      args:
        creates: /usr/share/keyrings/packages.microsoft.gpg

    - name: Add VS Code repository
      shell: "echo 'deb [signed-by=/usr/share/keyrings/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main' > /etc/apt/sources.list.d/vscode.list"
      args:
        creates: /etc/apt/sources.list.d/vscode.list

    - name: Install VS Code
      apt:
        name: code
        state: present
        update_cache: yes

    - name: Add Docker GPG key
      shell: "curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg"
      args:
        creates: /usr/share/keyrings/docker-archive-keyring.gpg

    - name: Add Docker repository
      shell: "echo 'deb [signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu focal stable' > /etc/apt/sources.list.d/docker.list"
      args:
        creates: /etc/apt/sources.list.d/docker.list

    - name: Install Docker and Docker Compose
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose-plugin
        state: present
        update_cache: yes

    - name: Ensure Docker service is running
      systemd:
        name: docker
        enabled: yes
        state: started

    - name: Clone ku-argon-server repository
      git:
        repo: "https://username:[TOKEN HERE]@github.com/KU-UTM-Cloud/ku-argon-server.git"
        dest: "/home/{{ ansible_user }}/ku-argon-server"
        clone: yes
        update: yes

    - name: Clone ku-flight-spotlight repository
      git:
        repo: "https://username:[TOKEN HERE]@github.com/KU-UTM-Cloud/ku-flight-spotlight.git"
        dest: "/home/{{ ansible_user }}/ku-flight-spotlight"
        clone: yes
        update: yes

    - name: Clone ku-flight-passport repository
      git:
        repo: "https://username:[TOKEN HERE]@github.com:KU-UTM-Cloud/ku_flight_passport_oidc_client.git"
        dest: "/home/{{ ansible_user }}/ku-flight-spotlight"
        clone: yes
        update: yes
  
    - name: Run Docker Compose
      command: docker compose up
      args:
        chdir: "/home/{{ ansible_user }}/ku-argon-server"

    - name: Create directory for Nginx Proxy Manager
      file:
        path: "/home/{{ ansible_user }}/nginx-proxy-manager"
        state: directory
        mode: '0755'

    - name: Create docker-compose.yml for Nginx Proxy Manager
      copy:
        dest: "/home/{{ ansible_user }}/nginx-proxy-manager/docker-compose.yml"
        content: |
          services:
            app:
              image: 'jc21/nginx-proxy-manager:latest'
              restart: unless-stopped
              ports:
                - '80:80'
                - '81:81'
                - '443:443'
              volumes:
                - ./data:/data
                - ./letsencrypt:/etc/letsencrypt

    - name: Run Nginx Proxy Manager using Docker Compose
      command: docker compose up -d
      args:
        chdir: "/home/{{ ansible_user }}/nginx-proxy-manager"

